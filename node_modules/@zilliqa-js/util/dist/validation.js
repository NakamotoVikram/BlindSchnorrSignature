"use strict";
//  Copyright (C) 2018 Zilliqa
//
//  This file is part of Zilliqa-Javascript-Library.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.
Object.defineProperty(exports, "__esModule", { value: true });
exports.matchesObject = exports.required = exports.isPlainObject = exports.isString = exports.isLong = exports.isBN = exports.isNumber = exports.isByteString = exports.isSignature = exports.isPubKey = exports.isPrivateKey = exports.isBase58 = exports.isBech32 = exports.isAddress = void 0;
var tslib_1 = require("tslib");
var bn_js_1 = (0, tslib_1.__importDefault)(require("bn.js"));
var long_1 = (0, tslib_1.__importDefault)(require("long"));
var isAddress = function (address) {
    return (0, exports.isByteString)(address, 40);
};
exports.isAddress = isAddress;
var isBech32 = function (raw) {
    return !!raw.match(/^zil1[qpzry9x8gf2tvdw0s3jn54khce6mua7l]{38}$/);
};
exports.isBech32 = isBech32;
var isBase58 = function (raw) {
    return !!raw.match(/^[1-9ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/);
};
exports.isBase58 = isBase58;
var isPrivateKey = function (privateKey) {
    return (0, exports.isByteString)(privateKey, 64);
};
exports.isPrivateKey = isPrivateKey;
var isPubKey = function (pubKey) {
    return (0, exports.isByteString)(pubKey, 66);
};
exports.isPubKey = isPubKey;
var isSignature = function (sig) {
    return (0, exports.isByteString)(sig, 128);
};
exports.isSignature = isSignature;
var isByteString = function (str, len) {
    return !!str.replace('0x', '').match("^[0-9a-fA-F]{" + len + "}$");
};
exports.isByteString = isByteString;
var isNumber = function (x) {
    return typeof x === 'number';
};
exports.isNumber = isNumber;
var isBN = function (x) {
    return bn_js_1.default.isBN(x);
};
exports.isBN = isBN;
var isLong = function (x) {
    return long_1.default.isLong(x);
};
exports.isLong = isLong;
var isString = function (x) {
    return typeof x === 'string';
};
exports.isString = isString;
var isPlainObject = function (x) {
    if (typeof x === 'object' && x !== null) {
        var proto = Object.getPrototypeOf(x);
        return proto === Object.prototype || proto === null;
    }
    return false;
};
exports.isPlainObject = isPlainObject;
var PRAGMA_REQUIRED = '@@ZJS_REQUIRED@@';
var required = function (fn) {
    if (typeof fn === 'function') {
        return Object.defineProperty(fn, 'required', {
            value: PRAGMA_REQUIRED,
        });
    }
    throw new Error('fn is not a function');
};
exports.required = required;
var matchesObject = function (x, test) {
    var e_1, _a;
    if ((0, exports.isPlainObject)(x)) {
        for (var key in test) {
            if (test.hasOwnProperty(key)) {
                try {
                    for (var _b = (e_1 = void 0, (0, tslib_1.__values)(test[key])), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var tester = _c.value;
                        var value = x[key];
                        if (typeof value === 'undefined' && tester.required) {
                            throw new Error('Key not found: ' + key);
                        }
                        else {
                            continue;
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        }
    }
    return true;
};
exports.matchesObject = matchesObject;
//# sourceMappingURL=validation.js.map