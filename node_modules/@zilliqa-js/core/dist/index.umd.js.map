{"version":3,"file":"index.umd.js","sources":["../src/types.ts","../src/decorators/sign.ts","../src/decorators/index.ts","../../../node_modules/cross-fetch/dist/browser-polyfill.js","../src/net.ts","../src/util.ts","../src/providers/base.ts","../src/providers/http.ts","../src/constants.ts","../src/eventEmitter.ts","../src/index.ts"],"sourcesContent":["//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCResponse } from './net';\nimport { Middleware } from './util';\n\nexport type Subscriber = (event: any) => void;\nexport type Subscribers = Map<SubscriptionToken, Subscriber>;\ntype SubscriptionToken = symbol;\n\nexport interface Provider {\n  middleware: Middleware;\n  // TODO: strict typing when we have a better idea of how to generalise the\n  // payloads sent to lookup nodes - protobuf?\n  send<R = any, E = string>(\n    method: string,\n    ...params: any[]\n  ): Promise<RPCResponse<R, E>>;\n\n  sendBatch<R = any, E = string>(\n    method: string,\n    ...params: any[]\n  ): Promise<RPCResponse<R, E>>;\n\n  subscribe?(event: string, subscriber: Subscriber): symbol;\n\n  unsubscribe?(token: symbol): void;\n}\n\nexport abstract class Signer {\n  abstract sign(payload: Signable): Promise<Signable>;\n}\n\nexport interface Signable {\n  bytes: Buffer;\n}\n\n/**\n * ZilliqaModule\n *\n * This interface must be implemented by all top-level modules.\n */\nexport interface ZilliqaModule {\n  provider: Provider;\n  signer: Signer;\n}\n\nexport interface BlockchainInfo {\n  NumPeers: number;\n  NumTxBlocks: string;\n  NumDSBlocks: string;\n  NumTransactions: string;\n  TransactionRate: number;\n  TxBlockRate: number;\n  DSBlockRate: number;\n  CurrentMiniEpoch: string;\n  CurrentDSEpoch: string;\n  NumTxnsDSEpoch: string;\n  NumTxnsTxEpoch: string;\n  ShardingStructure: ShardingStructure;\n}\n\nexport interface ShardingStructure {\n  NumPeers: number[];\n}\n\nexport interface TransactionObj {\n  ID: string;\n  version: string;\n  nonce: string;\n  toAddr: string;\n  amount: string;\n  code: string;\n  data: string;\n  gasPrice: string;\n  gasLimit: string;\n  signature: string;\n  senderPubKey: string;\n  receipt: TransactionReceiptObj;\n}\n\nexport interface TransactionStatusObj {\n  ID: string;\n  _id: StatusID;\n  amount: string;\n  epochInserted: string;\n  epochUpdated: string;\n  gasLimit: string;\n  gasPrice: string;\n  lastModified: string;\n  modificationState: number;\n  nonce: string;\n  senderAddr: string;\n  signature: string;\n  status: number;\n  success: boolean;\n  toAddr: string;\n  version: string;\n  statusMessage: string;\n}\n\nexport interface StatusID {\n  $oid: string;\n}\n\nexport interface DsBlockHeader {\n  BlockNum: string;\n  Difficulty: number;\n  DifficultyDS: number;\n  GasPrice: string;\n  LeaderPubKey: string;\n  PoWWinners: string[];\n  PrevHash: string;\n  // unix epoch\n  Timestamp: string;\n}\n\nexport interface DsBlockObj {\n  header: DsBlockHeader;\n  signature: string;\n}\n\ninterface BlockShort {\n  BlockNum: number;\n  Hash: string;\n}\n\nexport interface BlockList {\n  data: BlockShort[];\n  maxPages: number;\n}\n\nexport interface TxBlockHeader {\n  BlockNum: string;\n  DSBlockNum: string;\n  GasLimit: string;\n  GasUsed: string;\n  MbInfoHash: string;\n  MinerPubKey: string;\n  NumMicroBlocks: number;\n  NumPages: number;\n  NumTxns: number;\n  PrevBlockHash: string;\n  Rewards: string;\n  StateDeltaHash: string;\n  StateRootHash: string;\n  Timestamp: string;\n  TxnFees: string;\n  Version: number;\n}\n\nexport interface MicroBlockInfoObj {\n  MicroBlockHash: string;\n  MicroBlockShardId: number;\n  MicroBlockTxnRootHash: string;\n}\n\nexport interface TxBlockObj {\n  body: {\n    BlockHash: string;\n    HeaderSign: string;\n    MicroBlockInfos: MicroBlockInfoObj[];\n  };\n  header: TxBlockHeader;\n}\n\nexport interface TxList {\n  number: number;\n  TxnHashes: string[];\n}\n\nexport enum TransactionError {\n  CHECKER_FAILED = 0,\n  RUNNER_FAILED,\n  BALANCE_TRANSFER_FAILED,\n  EXECUTE_CMD_FAILED,\n  EXECUTE_CMD_TIMEOUT,\n  NO_GAS_REMAINING_FOUND,\n  NO_ACCEPTED_FOUND,\n  CALL_CONTRACT_FAILED,\n  CREATE_CONTRACT_FAILED,\n  JSON_OUTPUT_CORRUPTED,\n  CONTRACT_NOT_EXIST,\n  STATE_CORRUPTED,\n  LOG_ENTRY_INSTALL_FAILED,\n  MESSAGE_CORRUPTED,\n  RECEIPT_IS_NULL,\n  MAX_DEPTH_REACHED,\n  CHAIN_CALL_DIFF_SHARD,\n  PREPARATION_FAILED,\n  NO_OUTPUT,\n  OUTPUT_ILLEGAL,\n}\n\nexport interface TransactionErrorObj {\n  [depth: number]: TransactionError[];\n}\n\nexport interface TransactionReceiptObj<TGas = string> {\n  accepted?: boolean;\n  cumulative_gas: TGas;\n  epoch_num: string;\n  event_logs?: EventLogEntry[];\n  exceptions?: ExceptionEntry[];\n  success: boolean;\n  transitions?: TransitionEntry[];\n  errors?: any;\n}\n\nexport interface ExceptionEntry {\n  line: number;\n  message: string;\n}\n\nexport interface EventLogEntry {\n  address: string;\n  _eventname: string;\n  params: EventParam[];\n}\n\nexport interface TransitionEntry {\n  accepted: boolean;\n  addr: string;\n  depth: number;\n  msg: TransitionMsg;\n}\n\nexport interface TransitionMsg {\n  _amount: string;\n  _recipient: string;\n  _tag: string;\n  params: EventParam[];\n}\n\nexport interface EventParam {\n  vname: string;\n  type: string;\n  value: any;\n}\n\nexport interface TransactionStatus {\n  code: number;\n  TxnHash: string;\n  info: string;\n}\n\nexport interface MinerInfo {\n  dscommittee: string[];\n  shards: ShardInfo[];\n}\n\nexport interface ShardInfo {\n  nodes: string[];\n  size: number;\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { Signable, ZilliqaModule } from '../types';\n\n/**\n * sign\n *\n * This decorates a method by attempting to sign the first argument of the\n * intercepted method.\n *\n * @param {T} target\n * @param {K} key\n * @param {PropertyDescriptor} descriptor\n * @returns {PropertyDescriptor | undefined}\n */\nexport const sign = <T, K extends keyof T>(\n  target: T,\n  key: K,\n  descriptor: PropertyDescriptor,\n) => {\n  const original = descriptor.value;\n\n  async function interceptor(\n    this: ZilliqaModule,\n    arg: Signable,\n    ...args: any[]\n  ) {\n    if (original && arg.bytes) {\n      const signed = await this.signer.sign(arg);\n      return original.call(this, signed, ...args);\n    }\n  }\n\n  descriptor.value = interceptor;\n  return descriptor;\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport { sign } from './sign';\n","(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\nimport 'cross-fetch/polyfill';\nimport { WithRequest } from './util';\n\n/**\n * blockchain-side.\n */\nexport enum RPCMethod {\n  // Network-related methods\n  GetNetworkId = 'GetNetworkId',\n\n  // Blockchain-related methods\n  GetBlockchainInfo = 'GetBlockchainInfo',\n  GetShardingStructure = 'GetShardingStructure',\n  GetDSBlock = 'GetDsBlock',\n  GetLatestDSBlock = 'GetLatestDsBlock',\n  GetNumDSBlocks = 'GetNumDSBlocks',\n  GetDSBlockRate = 'GetDSBlockRate',\n  DSBlockListing = 'DSBlockListing',\n  GetTxBlock = 'GetTxBlock',\n  GetLatestTxBlock = 'GetLatestTxBlock',\n  GetNumTxBlocks = 'GetNumTxBlocks',\n  GetTxBlockRate = 'GetTxBlockRate',\n  TxBlockListing = 'TxBlockListing',\n  GetNumTransactions = 'GetNumTransactions',\n  GetTransactionRate = 'GetTransactionRate',\n  GetCurrentMiniEpoch = 'GetCurrentMiniEpoch',\n  GetCurrentDSEpoch = 'GetCurrentDSEpoch',\n  GetPrevDifficulty = 'GetPrevDifficulty',\n  GetPrevDSDifficulty = 'GetPrevDSDifficulty',\n  GetTotalCoinSupply = 'GetTotalCoinSupply',\n  GetMinerInfo = 'GetMinerInfo',\n\n  // Transaction-related methods\n  CreateTransaction = 'CreateTransaction',\n  GetTransaction = 'GetTransaction',\n  GetTransactionStatus = 'GetTransactionStatus',\n  GetRecentTransactions = 'GetRecentTransactions',\n  GetTransactionsForTxBlock = 'GetTransactionsForTxBlock',\n  GetTransactionsForTxBlockEx = 'GetTransactionsForTxBlockEx',\n  GetTxnBodiesForTxBlock = 'GetTxnBodiesForTxBlock',\n  GetTxnBodiesForTxBlockEx = 'GetTxnBodiesForTxBlockEx',\n  GetNumTxnsTxEpoch = 'GetNumTxnsTxEpoch',\n  GetNumTxnsDSEpoch = 'GetNumTxnsDSEpoch',\n  GetMinimumGasPrice = 'GetMinimumGasPrice',\n\n  // Contract-related methods\n  GetContractAddressFromTransactionID = 'GetContractAddressFromTransactionID',\n  GetSmartContracts = 'GetSmartContracts',\n  GetSmartContractCode = 'GetSmartContractCode',\n  GetSmartContractInit = 'GetSmartContractInit',\n  GetSmartContractState = 'GetSmartContractState',\n  GetSmartContractSubState = 'GetSmartContractSubState',\n  GetStateProof = 'GetStateProof',\n\n  // Account-related methods\n  GetBalance = 'GetBalance',\n}\n\nexport enum RPCErrorCode {\n  // Standard JSON-RPC 2.0 errors\n  // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).\n  // It should not be used for application-layer errors.\n  RPC_INVALID_REQUEST = -32600,\n  // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).\n  // It should not be used for application-layer errors.\n  RPC_METHOD_NOT_FOUND = -32601,\n  RPC_INVALID_PARAMS = -32602,\n  // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind\n  // (for example datadir corruption).\n  RPC_INTERNAL_ERROR = -32603,\n  RPC_PARSE_ERROR = -32700,\n\n  // General application defined errors\n  RPC_MISC_ERROR = -1, // std::exception thrown in command handling\n  RPC_TYPE_ERROR = -3, // Unexpected type was passed as parameter\n  RPC_INVALID_ADDRESS_OR_KEY = -5, // Invalid address or key\n  RPC_INVALID_PARAMETER = -8, // Invalid, missing or duplicate parameter\n  RPC_DATABASE_ERROR = -20, // Database error\n  RPC_DESERIALIZATION_ERROR = -22, // Error parsing or validating structure in raw format\n  RPC_VERIFY_ERROR = -25, // General error during transaction or block submission\n  RPC_VERIFY_REJECTED = -26, // Transaction or block was rejected by network rules\n  RPC_IN_WARMUP = -28, // Client still warming up\n  RPC_METHOD_DEPRECATED = -32, // RPC method is deprecated\n}\n\nexport interface RPCRequestPayload<T> {\n  id: number;\n  jsonrpc: '2.0';\n  method: RPCMethod;\n  params: T;\n}\n\ninterface RPCRequestOptions {\n  headers?: Headers;\n  method?: string;\n}\n\nexport interface RPCRequest<T> {\n  url: string;\n  payload: RPCRequestPayload<T> | RPCRequestPayload<T>[];\n  options?: RPCRequestOptions;\n}\n\ninterface RPCResponseBase {\n  jsonrpc: '2.0';\n  id: number;\n}\n\nexport interface RPCResponseSuccess<R = any> extends RPCResponseBase {\n  batch_result?: R; // for batch response\n  result: R; // for non-batch response\n  error: undefined;\n}\n\nexport interface RPCResponseError<E = any> extends RPCResponseBase {\n  result: undefined;\n  error: RPCError<E>;\n}\n\nexport interface RPCError<E> {\n  code: RPCErrorCode;\n  message: string;\n  data?: E;\n}\n\nexport type RPCResponse<R, E> = RPCResponseSuccess<R> | RPCResponseError<E>;\n\nexport type RPCResponseHandler<R, E, T> = (\n  response: WithRequest<RPCResponse<R, E>>,\n) => T;\n\nconst DEFAULT_HEADERS = { 'Content-Type': 'application/json' };\n\nexport const performRPC = async <R, E, D extends any[], T = RPCResponse<R, E>>(\n  request: RPCRequest<D>,\n  handler: RPCResponseHandler<R, E, T>,\n): Promise<T> => {\n  try {\n    const response = await fetch(request.url, {\n      method: 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...DEFAULT_HEADERS,\n        ...((request.options && request.options.headers) || {}),\n      } as HeadersInit,\n    });\n\n    return response\n      .json()\n      .then((body) => {\n        return { ...body, req: request };\n      })\n      .then(handler);\n  } catch (err) {\n    throw err;\n  }\n};\n\n// identical to performRPC; difference is the response\nexport const performBatchRPC = async <\n  R,\n  E,\n  D extends any[],\n  T = RPCResponse<R, E>,\n>(\n  request: RPCRequest<D>,\n  handler: RPCResponseHandler<R, E, T>,\n): Promise<T> => {\n  try {\n    const response = await fetch(request.url, {\n      method: 'POST',\n      cache: 'no-cache',\n      mode: 'cors',\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(request.payload),\n      headers: {\n        ...DEFAULT_HEADERS,\n        ...((request.options && request.options.headers) || {}),\n      } as HeadersInit,\n    });\n\n    return (\n      response\n        .json()\n        .then((batch_result) => {\n          return { batch_result, req: request };\n        })\n        // no handler as compared to performRPC to preserve the body array\n        // e.g. response\n        /*\n      { body:\n        [ { id: 1, jsonrpc: '2.0', result: [Object] },\n          { id: 1, jsonrpc: '2.0', result: [Object] } ],\n       req:\n        { url: 'https://dev-api.zilliqa.com',\n          payload: [ [Object], [Object] ] } }\n      */\n        .then()\n    );\n  } catch (err) {\n    throw err;\n  }\n};\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCMethod, RPCRequest, RPCResponse } from './net';\n\nexport type WithRequest<T, I = any> = T & { req: RPCRequest<I> };\n\nexport type Matcher = RPCMethod | '*' | RegExp;\n\nexport interface Middleware {\n  request: {\n    use: <I, O>(fn: ReqMiddlewareFn<I, O>, match?: Matcher) => void;\n  };\n  response: {\n    use: <I, O, E>(fn: ResMiddlewareFn<I, O, E>, match?: Matcher) => void;\n  };\n}\n\nexport type Transformer<I, O> = (payload: I) => O;\n\nexport type ReqMiddlewareFn<I = any, O = any> = Transformer<\n  RPCRequest<I>,\n  RPCRequest<O>\n>;\nexport type ResMiddlewareFn<I = any, O = any, E = any> = Transformer<\n  WithRequest<RPCResponse<I, E>>,\n  WithRequest<RPCResponse<O, E>>\n>;\n\nexport function isValidResponse<T, E>(\n  response: any,\n): response is RPCResponse<T, E> {\n  if (\n    response.jsonrpc === '2.0' &&\n    (response.id === '1' || response.id === 1) &&\n    (response.error || response.result)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function composeMiddleware<T extends ReqMiddlewareFn[]>(\n  ...fns: T\n): ReqMiddlewareFn;\nexport function composeMiddleware<T extends ResMiddlewareFn[]>(\n  ...fns: T\n): ResMiddlewareFn;\nexport function composeMiddleware(...fns: any[]): any {\n  if (fns.length === 0) {\n    return (arg: any) => arg;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return fns.reduce((a, b) => (arg: any) => a(b(arg)));\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { RPCMethod } from '../net';\nimport { Matcher, ReqMiddlewareFn, ResMiddlewareFn } from '../util';\n\nconst enum MiddlewareType {\n  REQ,\n  RES,\n}\n\nexport class BaseProvider {\n  middleware = {\n    request: {\n      use: <I, O>(fn: ReqMiddlewareFn<I, O>, match: Matcher = '*') => {\n        this.pushMiddleware<MiddlewareType.REQ>(fn, MiddlewareType.REQ, match);\n      },\n    },\n    response: {\n      use: <I, O, E>(fn: ResMiddlewareFn<I, O, E>, match: Matcher = '*') => {\n        this.pushMiddleware<MiddlewareType.RES>(fn, MiddlewareType.RES, match);\n      },\n    },\n  };\n\n  protected nodeURL: string;\n  protected reqMiddleware: Map<Matcher, ReqMiddlewareFn[]>;\n  protected resMiddleware: Map<Matcher, ResMiddlewareFn[]>;\n\n  constructor(\n    nodeURL: string,\n    reqMiddleware: Map<Matcher, ReqMiddlewareFn[]> = new Map(),\n    resMiddleware: Map<Matcher, ResMiddlewareFn[]> = new Map(),\n  ) {\n    this.nodeURL = nodeURL;\n    this.reqMiddleware = reqMiddleware;\n    this.resMiddleware = resMiddleware;\n  }\n\n  /**\n   * pushMiddleware\n   *\n   * Adds the middleware to the appropriate middleware map.\n   *\n   * @param {ResMiddlewareFn}\n   * @param {T} type\n   * @param {Matcher} match\n   * @returns {void}\n   */\n  protected pushMiddleware<T extends MiddlewareType>(\n    fn: T extends MiddlewareType.REQ ? ReqMiddlewareFn : ResMiddlewareFn,\n    type: T,\n    match: Matcher,\n  ): void {\n    if (type !== MiddlewareType.REQ && type !== MiddlewareType.RES) {\n      throw new Error('Please specify the type of middleware being added');\n    }\n    if (type === MiddlewareType.REQ) {\n      const current = this.reqMiddleware.get(match) || [];\n      this.reqMiddleware.set(match, [...current, <ReqMiddlewareFn>fn]);\n    } else {\n      const current = this.resMiddleware.get(match) || [];\n      this.resMiddleware.set(match, [...current, <ResMiddlewareFn>fn]);\n    }\n  }\n\n  /**\n   * getMiddleware\n   *\n   * Returns the middleware that matches the matcher provided. Note that\n   * middleware are called in order of specificity: string -> regexp ->\n   * wildcard.\n   *\n   * @param {Matcher} match\n   * @returns {[ReqMiddlewareFn[], ResMiddlewareFn[]]}\n   */\n  protected getMiddleware(\n    method: RPCMethod,\n  ): [ReqMiddlewareFn[], ResMiddlewareFn[]] {\n    const reqFns: ReqMiddlewareFn[] = [];\n    const resFns: ResMiddlewareFn[] = [];\n\n    for (const [key, transformers] of this.reqMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        reqFns.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        reqFns.push(...transformers);\n      }\n\n      if (key === '*') {\n        reqFns.push(...transformers);\n      }\n    }\n\n    for (const [key, transformers] of this.resMiddleware.entries()) {\n      if (typeof key === 'string' && key !== '*' && key === method) {\n        resFns.push(...transformers);\n      }\n\n      if (key instanceof RegExp && key.test(method)) {\n        resFns.push(...transformers);\n      }\n\n      if (key === '*') {\n        resFns.push(...transformers);\n      }\n    }\n\n    return [reqFns, resFns];\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport { BaseProvider } from './base';\nimport {\n  RPCMethod,\n  RPCRequest,\n  RPCResponse,\n  performRPC,\n  performBatchRPC,\n  RPCRequestPayload,\n} from '../net';\nimport { composeMiddleware } from '../util';\nimport { Provider, Subscriber } from '../types';\n\nexport class HTTPProvider extends BaseProvider implements Provider {\n  buildPayload<T extends any[]>(method: RPCMethod, params: T): RPCRequest<T> {\n    return {\n      url: this.nodeURL,\n      payload: { id: 1, jsonrpc: '2.0', method, params },\n    };\n  }\n\n  buildBatchPayload<T extends any[]>(\n    method: RPCMethod,\n    paramsList: T[],\n  ): RPCRequest<T> {\n    const payloads: RPCRequestPayload<T>[] = [];\n    for (let i = 0; i < paramsList.length; i++) {\n      // most of the payloads should be a single param, e.g. GetTransaction\n      // however, there are special cases e.g. GetSmartContractSubState & GetTransactionsForTxBlockEx\n      // where the param field is a list\n      const payloadParams = paramsList[i];\n      let params: any;\n      if (Array.isArray(payloadParams)) {\n        // for those param field that is already a list\n        params = payloadParams;\n      } else {\n        params = [payloadParams];\n      }\n      // id start from index 1\n      payloads.push({\n        id: i + 1,\n        jsonrpc: '2.0',\n        method,\n        params,\n      });\n    }\n    return {\n      url: this.nodeURL,\n      payload: payloads,\n    };\n  }\n\n  send<P extends any[], R = any, E = string>(\n    method: RPCMethod,\n    ...params: P\n  ): Promise<RPCResponse<R, E>> {\n    const [tReq, tRes] = this.getMiddleware(method);\n\n    const reqMiddleware = composeMiddleware(...tReq);\n    const resMiddleware = composeMiddleware(...tRes);\n\n    const req = reqMiddleware(this.buildPayload(method, params));\n\n    return performRPC(req, resMiddleware);\n  }\n\n  sendBatch<P extends any[], R = any, E = string>(\n    method: RPCMethod,\n    params: P[],\n  ): Promise<RPCResponse<R, E>> {\n    const [tReq, tRes] = this.getMiddleware(method);\n    const reqMiddleware = composeMiddleware(...tReq);\n    const resMiddleware = composeMiddleware(...tRes);\n\n    const batchPayload = this.buildBatchPayload(method, params);\n\n    const req = reqMiddleware(batchPayload);\n    return performBatchRPC(req, resMiddleware);\n  }\n\n  subscribe(event: string, subscriber: Subscriber): symbol {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n\n  unsubscribe(token: symbol) {\n    throw new Error('HTTPProvider does not support subscriptions.');\n  }\n}\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n// this constant is used to indicate the number of times to poll the\n// blockchain for a transaction confirmation. this number has been selected by\n// using a heuristic to calculate the approximate maximum amount of time it\n// should take for a transaction to be confirmed, even during a PoW submission\n// round.\nexport const GET_TX_ATTEMPTS = 33;\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nimport mitt from 'mitt';\n\nclass EventEmitter<T> {\n  off: (type: string, handler: mitt.Handler) => void;\n  emit: (type: string, event?: any) => void;\n  promise: Promise<T>;\n  resolve?: (value: T | PromiseLike<T>) => void;\n  reject?: (reason?: any) => void;\n  then?: any;\n  private handlers?: any = {};\n  private emitter: mitt.Emitter;\n  constructor() {\n    this.emitter = new mitt(this.handlers);\n    this.off = this.emitter.off.bind(this);\n    this.emit = this.emitter.emit.bind(this);\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    this.then = this.promise.then.bind(this.promise);\n  }\n\n  resetHandlers() {\n    for (const i in this.handlers) {\n      delete this.handlers[i];\n    }\n  }\n  on(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n    return this;\n  }\n  once(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, (e: any) => {\n      handler(e);\n      this.removeEventListener(type);\n    });\n  }\n\n  addEventListener(type: string, handler: mitt.Handler) {\n    this.emitter.on(type, handler);\n  }\n\n  removeEventListener(type?: string, handler?: mitt.Handler) {\n    if (!type) {\n      this.handlers = {};\n      return;\n    }\n    if (!handler) {\n      delete this.handlers[type];\n    } else {\n      return this.emitter.off(type, handler);\n    }\n  }\n  onError(error: any) {\n    this.emitter.on('error', error);\n    this.removeEventListener('*');\n  }\n  onData(data: any) {\n    this.emitter.on('data', data);\n    this.removeEventListener('*');\n  }\n  listenerCount(listenKey: any) {\n    let count = 0;\n    Object.keys(this.handlers).forEach((val) => {\n      if (listenKey === val) {\n        count += 1;\n      }\n    });\n    return count;\n  }\n}\n\nexport { EventEmitter };\n","//  Copyright (C) 2018 Zilliqa\n//\n//  This file is part of Zilliqa-Javascript-Library.\n//\n//  This program is free software: you can redistribute it and/or modify\n//  it under the terms of the GNU General Public License as published by\n//  the Free Software Foundation, either version 3 of the License, or\n//  (at your option) any later version.\n//\n//  This program is distributed in the hope that it will be useful,\n//  but WITHOUT ANY WARRANTY; without even the implied warranty of\n//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n//  GNU General Public License for more details.\n//\n//  You should have received a copy of the GNU General Public License\n//  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nexport * from './types';\nexport * from './decorators';\nexport * from './net';\nexport * from './util';\nexport * from './providers/http';\nexport * from './constants';\nexport * from './eventEmitter';\n"],"names":["TransactionError","this","RPCMethod","RPCErrorCode","__assign","__values","__read","__extends"],"mappings":";;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA4BA;MAAA;OAEC;MAAD,aAAC;EAAD,CAAC,IAAA;EA4ID,WAAY,gBAAgB;MAC1B,2EAAkB,CAAA;MAClB,yEAAa,CAAA;MACb,6FAAuB,CAAA;MACvB,mFAAkB,CAAA;MAClB,qFAAmB,CAAA;MACnB,2FAAsB,CAAA;MACtB,iFAAiB,CAAA;MACjB,uFAAoB,CAAA;MACpB,2FAAsB,CAAA;MACtB,yFAAqB,CAAA;MACrB,oFAAkB,CAAA;MAClB,8EAAe,CAAA;MACf,gGAAwB,CAAA;MACxB,kFAAiB,CAAA;MACjB,8EAAe,CAAA;MACf,kFAAiB,CAAA;MACjB,0FAAqB,CAAA;MACrB,oFAAkB,CAAA;MAClB,kEAAS,CAAA;MACT,4EAAc,CAAA;EAChB,CAAC,EArBWA,wBAAgB,KAAhBA,wBAAgB,QAqB3B;;EC9MD;AACA,EAkBA;;;;;;;;;;;AAWA,MAAa,IAAI,GAAG,UAClB,MAAS,EACT,GAAM,EACN,UAA8B;MAE9B,IAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC;MAElC,SAAe,WAAW,CAExB,GAAa;UACb,cAAc;eAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;cAAd,6BAAc;;;;;;;gCAEV,QAAQ,IAAI,GAAG,CAAC,KAAK,CAAA,EAArB,wBAAqB;0BACR,qBAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAA;;0BAApC,MAAM,GAAG,SAA2B;0BAC1C,sBAAO,QAAQ,CAAC,IAAI,OAAb,QAAQ,uBAAM,IAAI,EAAE,MAAM,gBAAK,IAAI,YAAE;;;;;OAE/C;MAED,UAAU,CAAC,KAAK,GAAG,WAAW,CAAC;MAC/B,OAAO,UAAU,CAAC;EACpB,CAAC;;EClDD,8BAA8B;;ECA9B,CAAC,SAAS,IAAI,EAAE;;EAEhB,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;EAClB,IAAI,MAAM;EACV,GAAG;;EAEH,EAAE,IAAI,OAAO,GAAG;EAChB,IAAI,YAAY,EAAE,iBAAiB,IAAI,IAAI;EAC3C,IAAI,QAAQ,EAAE,QAAQ,IAAI,IAAI,IAAI,UAAU,IAAI,MAAM;EACtD,IAAI,IAAI,EAAE,YAAY,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW;EAChE,MAAM,IAAI;EACV,QAAQ,IAAI,IAAI,EAAE,CAAC;EACnB,QAAQ,OAAO,IAAI;EACnB,OAAO,CAAC,MAAM,CAAC,EAAE;EACjB,QAAQ,OAAO,KAAK;EACpB,OAAO;EACP,KAAK,GAAG;EACR,IAAI,QAAQ,EAAE,UAAU,IAAI,IAAI;EAChC,IAAI,WAAW,EAAE,aAAa,IAAI,IAAI;EACtC,GAAG,CAAC;;EAEJ,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE;EAC3B,IAAI,IAAI,WAAW,GAAG;EACtB,MAAM,oBAAoB;EAC1B,MAAM,qBAAqB;EAC3B,MAAM,4BAA4B;EAClC,MAAM,qBAAqB;EAC3B,MAAM,sBAAsB;EAC5B,MAAM,qBAAqB;EAC3B,MAAM,sBAAsB;EAC5B,MAAM,uBAAuB;EAC7B,MAAM,uBAAuB;EAC7B,KAAK,CAAC;;EAEN,IAAI,IAAI,UAAU,GAAG,SAAS,GAAG,EAAE;EACnC,MAAM,OAAO,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC;EACzD,KAAK,CAAC;;EAEN,IAAI,IAAI,iBAAiB,GAAG,WAAW,CAAC,MAAM,IAAI,SAAS,GAAG,EAAE;EAChE,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACjF,KAAK,CAAC;EACN,GAAG;;EAEH,EAAE,SAAS,aAAa,CAAC,IAAI,EAAE;EAC/B,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;EAC1B,KAAK;EACL,IAAI,IAAI,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;EACjD,MAAM,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC;EACnE,KAAK;EACL,IAAI,OAAO,IAAI,CAAC,WAAW,EAAE;EAC7B,GAAG;;EAEH,EAAE,SAAS,cAAc,CAAC,KAAK,EAAE;EACjC,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;EACnC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;EAC5B,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;;EAEH;EACA,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;EAC9B,IAAI,IAAI,QAAQ,GAAG;EACnB,MAAM,IAAI,EAAE,WAAW;EACvB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;EAClC,QAAQ,OAAO,CAAC,IAAI,EAAE,KAAK,KAAK,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;EACxD,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE;EAC1B,MAAM,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW;EAC7C,QAAQ,OAAO,QAAQ;EACvB,OAAO,CAAC;EACR,KAAK;;EAEL,IAAI,OAAO,QAAQ;EACnB,GAAG;;EAEH,EAAE,SAAS,OAAO,CAAC,OAAO,EAAE;EAC5B,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;;EAElB,IAAI,IAAI,OAAO,YAAY,OAAO,EAAE;EACpC,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,EAAE;EAC5C,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACjC,OAAO,EAAE,IAAI,CAAC,CAAC;EACf,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;EACvC,MAAM,OAAO,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;EACvC,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,OAAO,EAAE,IAAI,CAAC,CAAC;EACf,KAAK,MAAM,IAAI,OAAO,EAAE;EACxB,MAAM,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;EACjE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACzC,OAAO,EAAE,IAAI,CAAC,CAAC;EACf,KAAK;EACL,GAAG;;EAEH,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE;EACnD,IAAI,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;EAC/B,IAAI,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;EAClC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAClC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;EAC3D,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,IAAI,EAAE;EAC/C,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzC,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE;EACzC,IAAI,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;EAC/B,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI;EACjD,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE;EACzC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;EACvD,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE;EAChD,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;EAC1D,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,QAAQ,EAAE,OAAO,EAAE;EAC1D,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE;EAC/B,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;EACzC,QAAQ,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3D,OAAO;EACP,KAAK;EACL,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;EACtC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;EACnB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9D,IAAI,OAAO,WAAW,CAAC,KAAK,CAAC;EAC7B,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;EACxC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;EACnB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACzD,IAAI,OAAO,WAAW,CAAC,KAAK,CAAC;EAC7B,GAAG,CAAC;;EAEJ,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,WAAW;EACzC,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;EACnB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACvE,IAAI,OAAO,WAAW,CAAC,KAAK,CAAC;EAC7B,GAAG,CAAC;;EAEJ,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE;EACxB,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;EACnE,GAAG;;EAEH,EAAE,SAAS,QAAQ,CAAC,IAAI,EAAE;EAC1B,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;EACvB,MAAM,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;EAC1D,KAAK;EACL,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;EACzB,GAAG;;EAEH,EAAE,SAAS,eAAe,CAAC,MAAM,EAAE;EACnC,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;EACjD,MAAM,MAAM,CAAC,MAAM,GAAG,WAAW;EACjC,QAAQ,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;EAC/B,OAAO,CAAC;EACR,MAAM,MAAM,CAAC,OAAO,GAAG,WAAW;EAClC,QAAQ,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EAC7B,OAAO,CAAC;EACR,KAAK,CAAC;EACN,GAAG;;EAEH,EAAE,SAAS,qBAAqB,CAAC,IAAI,EAAE;EACvC,IAAI,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;EAClC,IAAI,IAAI,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;EAC1C,IAAI,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;EACnC,IAAI,OAAO,OAAO;EAClB,GAAG;;EAEH,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE;EAChC,IAAI,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;EAClC,IAAI,IAAI,OAAO,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;EAC1C,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;EAC5B,IAAI,OAAO,OAAO;EAClB,GAAG;;EAEH,EAAE,SAAS,qBAAqB,CAAC,GAAG,EAAE;EACtC,IAAI,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;EACnC,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;EAEvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC1C,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,KAAK;EACL,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;EACzB,GAAG;;EAEH,EAAE,SAAS,WAAW,CAAC,GAAG,EAAE;EAC5B,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;EACnB,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACzB,KAAK,MAAM;EACX,MAAM,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;EAChD,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EACpC,MAAM,OAAO,IAAI,CAAC,MAAM;EACxB,KAAK;EACL,GAAG;;EAEH,EAAE,SAAS,IAAI,GAAG;EAClB,IAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;EAE1B,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE;EACpC,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAC5B,MAAM,IAAI,CAAC,IAAI,EAAE;EACjB,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;EAC5B,OAAO,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAC9B,OAAO,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;EACrE,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;EAC9B,OAAO,MAAM,IAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;EAC7E,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;EAClC,OAAO,MAAM,IAAI,OAAO,CAAC,YAAY,IAAI,eAAe,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;EACxF,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;EACzC,OAAO,MAAM,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;EAC1E,QAAQ,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACzD;EACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;EAC3D,OAAO,MAAM,IAAI,OAAO,CAAC,WAAW,KAAK,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE;EAChH,QAAQ,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;EAClD,OAAO,MAAM;EACb,QAAQ,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC;EACpD,OAAO;;EAEP,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;EAC7C,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;EACtC,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAC;EACvE,SAAS,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;EAC1D,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;EAChE,SAAS,MAAM,IAAI,OAAO,CAAC,YAAY,IAAI,eAAe,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;EAC1F,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,iDAAiD,CAAC,CAAC;EAC9F,SAAS;EACT,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE;EACtB,MAAM,IAAI,CAAC,IAAI,GAAG,WAAW;EAC7B,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;EACtC,QAAQ,IAAI,QAAQ,EAAE;EACtB,UAAU,OAAO,QAAQ;EACzB,SAAS;;EAET,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;EAC5B,UAAU,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;EAChD,SAAS,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;EAC1C,UAAU,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;EACnE,SAAS,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;EACvC,UAAU,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;EACjE,SAAS,MAAM;EACf,UAAU,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;EAC5D,SAAS;EACT,OAAO,CAAC;;EAER,MAAM,IAAI,CAAC,WAAW,GAAG,WAAW;EACpC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE;EACnC,UAAU,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC;EACzE,SAAS,MAAM;EACf,UAAU,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC;EACxD,SAAS;EACT,OAAO,CAAC;EACR,KAAK;;EAEL,IAAI,IAAI,CAAC,IAAI,GAAG,WAAW;EAC3B,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;EACpC,MAAM,IAAI,QAAQ,EAAE;EACpB,QAAQ,OAAO,QAAQ;EACvB,OAAO;;EAEP,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE;EAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;EAC7C,OAAO,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;EACxC,QAAQ,OAAO,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;EAC5E,OAAO,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;EACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;EAC/D,OAAO,MAAM;EACb,QAAQ,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;EAC9C,OAAO;EACP,KAAK,CAAC;;EAEN,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE;EAC1B,MAAM,IAAI,CAAC,QAAQ,GAAG,WAAW;EACjC,QAAQ,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;EACvC,OAAO,CAAC;EACR,KAAK;;EAEL,IAAI,IAAI,CAAC,IAAI,GAAG,WAAW;EAC3B,MAAM,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;EACzC,KAAK,CAAC;;EAEN,IAAI,OAAO,IAAI;EACf,GAAG;;EAEH;EACA,EAAE,IAAI,OAAO,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;;EAEpE,EAAE,SAAS,eAAe,CAAC,MAAM,EAAE;EACnC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;EACvC,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,MAAM;EAC7D,GAAG;;EAEH,EAAE,SAAS,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE;EACnC,IAAI,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;EAC5B,IAAI,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;EAE5B,IAAI,IAAI,KAAK,YAAY,OAAO,EAAE;EAClC,MAAM,IAAI,KAAK,CAAC,QAAQ,EAAE;EAC1B,QAAQ,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC;EAC3C,OAAO;EACP,MAAM,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;EAC3B,MAAM,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;EAC3C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;EAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EAClD,OAAO;EACP,MAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;EACjC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;EAC7B,MAAM,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE;EAC5C,QAAQ,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC;EAC/B,QAAQ,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;EAC9B,OAAO;EACP,KAAK,MAAM;EACX,MAAM,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;EAC/B,KAAK;;EAEL,IAAI,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC;EACzE,IAAI,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;EAC1C,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;EAClD,KAAK;EACL,IAAI,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC;EAC1E,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;EAClD,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;EAEzB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,KAAK,IAAI,EAAE;EACnE,MAAM,MAAM,IAAI,SAAS,CAAC,2CAA2C,CAAC;EACtE,KAAK;EACL,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;EACzB,GAAG;;EAEH,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW;EACvC,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC;EACtD,GAAG,CAAC;;EAEJ,EAAE,SAAS,MAAM,CAAC,IAAI,EAAE;EACxB,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;EAC9B,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE;EACnD,MAAM,IAAI,KAAK,EAAE;EACjB,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACrC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EACrD,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EACxD,QAAQ,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EACzE,OAAO;EACP,KAAK,CAAC,CAAC;EACP,IAAI,OAAO,IAAI;EACf,GAAG;;EAEH,EAAE,SAAS,YAAY,CAAC,UAAU,EAAE;EACpC,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;EAChC;EACA;EACA,IAAI,IAAI,mBAAmB,GAAG,UAAU,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;EACtE,IAAI,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;EAC9D,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EAClC,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;EACrC,MAAM,IAAI,GAAG,EAAE;EACf,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3C,QAAQ,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EACnC,OAAO;EACP,KAAK,CAAC,CAAC;EACP,IAAI,OAAO,OAAO;EAClB,GAAG;;EAEH,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;EAE/B,EAAE,SAAS,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE;EACvC,IAAI,IAAI,CAAC,OAAO,EAAE;EAClB,MAAM,OAAO,GAAG,EAAE,CAAC;EACnB,KAAK;;EAEL,IAAI,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;EAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;EACtE,IAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;EACtD,IAAI,IAAI,CAAC,UAAU,GAAG,YAAY,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;EAC1E,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;EAChD,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC;EACjC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;EAC7B,GAAG;;EAEH,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;;EAEhC,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW;EACxC,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;EACxC,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM;EACzB,MAAM,UAAU,EAAE,IAAI,CAAC,UAAU;EACjC,MAAM,OAAO,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;EACxC,MAAM,GAAG,EAAE,IAAI,CAAC,GAAG;EACnB,KAAK,CAAC;EACN,GAAG,CAAC;;EAEJ,EAAE,QAAQ,CAAC,KAAK,GAAG,WAAW;EAC9B,IAAI,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;EACnE,IAAI,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;EAC5B,IAAI,OAAO,QAAQ;EACnB,GAAG,CAAC;;EAEJ,EAAE,IAAI,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;EAEnD,EAAE,QAAQ,CAAC,QAAQ,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE;EAC5C,IAAI,IAAI,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;EACjD,MAAM,MAAM,IAAI,UAAU,CAAC,qBAAqB,CAAC;EACjD,KAAK;;EAEL,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EACzE,GAAG,CAAC;;EAEJ,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACzB,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACzB,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;EAE3B,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;EACrC,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;EACjD,MAAM,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;EAC7C,MAAM,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;;EAErC,MAAM,GAAG,CAAC,MAAM,GAAG,WAAW;EAC9B,QAAQ,IAAI,OAAO,GAAG;EACtB,UAAU,MAAM,EAAE,GAAG,CAAC,MAAM;EAC5B,UAAU,UAAU,EAAE,GAAG,CAAC,UAAU;EACpC,UAAU,OAAO,EAAE,YAAY,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,EAAE,CAAC;EAClE,SAAS,CAAC;EACV,QAAQ,OAAO,CAAC,GAAG,GAAG,aAAa,IAAI,GAAG,GAAG,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;EACpG,QAAQ,IAAI,IAAI,GAAG,UAAU,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;EACvE,QAAQ,OAAO,CAAC,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;EAC7C,OAAO,CAAC;;EAER,MAAM,GAAG,CAAC,OAAO,GAAG,WAAW;EAC/B,QAAQ,MAAM,CAAC,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACxD,OAAO,CAAC;;EAER,MAAM,GAAG,CAAC,SAAS,GAAG,WAAW;EACjC,QAAQ,MAAM,CAAC,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACxD,OAAO,CAAC;;EAER,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;EAElD,MAAM,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,EAAE;EAC7C,QAAQ,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC;EACnC,OAAO,MAAM,IAAI,OAAO,CAAC,WAAW,KAAK,MAAM,EAAE;EACjD,QAAQ,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;EACpC,OAAO;;EAEP,MAAM,IAAI,cAAc,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE;EACjD,QAAQ,GAAG,CAAC,YAAY,GAAG,MAAM,CAAC;EAClC,OAAO;;EAEP,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,IAAI,EAAE;EACpD,QAAQ,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EAC1C,OAAO,CAAC,CAAC;;EAET,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,OAAO,CAAC,SAAS,KAAK,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;EACpF,KAAK,CAAC;EACN,GAAG,CAAC;EACJ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;EAC7B,CAAC,EAAE,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,GAAGC,SAAI,CAAC,CAAC;;EC1b9C,WAAY,SAAS;;MAEnB,0CAA6B,CAAA;;MAG7B,oDAAuC,CAAA;MACvC,0DAA6C,CAAA;MAC7C,sCAAyB,CAAA;MACzB,kDAAqC,CAAA;MACrC,8CAAiC,CAAA;MACjC,8CAAiC,CAAA;MACjC,8CAAiC,CAAA;MACjC,sCAAyB,CAAA;MACzB,kDAAqC,CAAA;MACrC,8CAAiC,CAAA;MACjC,8CAAiC,CAAA;MACjC,8CAAiC,CAAA;MACjC,sDAAyC,CAAA;MACzC,sDAAyC,CAAA;MACzC,wDAA2C,CAAA;MAC3C,oDAAuC,CAAA;MACvC,oDAAuC,CAAA;MACvC,wDAA2C,CAAA;MAC3C,sDAAyC,CAAA;MACzC,0CAA6B,CAAA;;MAG7B,oDAAuC,CAAA;MACvC,8CAAiC,CAAA;MACjC,0DAA6C,CAAA;MAC7C,4DAA+C,CAAA;MAC/C,oEAAuD,CAAA;MACvD,wEAA2D,CAAA;MAC3D,8DAAiD,CAAA;MACjD,kEAAqD,CAAA;MACrD,oDAAuC,CAAA;MACvC,oDAAuC,CAAA;MACvC,sDAAyC,CAAA;;MAGzC,wFAA2E,CAAA;MAC3E,oDAAuC,CAAA;MACvC,0DAA6C,CAAA;MAC7C,0DAA6C,CAAA;MAC7C,4DAA+C,CAAA;MAC/C,kEAAqD,CAAA;MACrD,4CAA+B,CAAA;;MAG/B,sCAAyB,CAAA;EAC3B,CAAC,EAlDWC,iBAAS,KAATA,iBAAS,QAkDpB;AAED,EAAA,WAAY,YAAY;;;;MAItB,kFAA4B,CAAA;;;MAG5B,oFAA6B,CAAA;MAC7B,gFAA2B,CAAA;;;MAG3B,gFAA2B,CAAA;MAC3B,0EAAwB,CAAA;;MAGxB,oEAAmB,CAAA;MACnB,oEAAmB,CAAA;MACnB,4FAA+B,CAAA;MAC/B,kFAA0B,CAAA;MAC1B,6EAAwB,CAAA;MACxB,2FAA+B,CAAA;MAC/B,yEAAsB,CAAA;MACtB,+EAAyB,CAAA;MACzB,mEAAmB,CAAA;MACnB,mFAA2B,CAAA;EAC7B,CAAC,EAzBWC,oBAAY,KAAZA,oBAAY,QAyBvB;EAgDD,IAAM,eAAe,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;AAE/D,MAAa,UAAU,GAAG,UACxB,OAAsB,EACtB,OAAoC;;;;;;kBAGjB,qBAAM,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;0BACxC,MAAM,EAAE,MAAM;0BACd,KAAK,EAAE,UAAU;0BACjB,IAAI,EAAE,MAAM;0BACZ,QAAQ,EAAE,QAAQ;0BAClB,QAAQ,EAAE,aAAa;0BACvB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC;0BACrC,OAAO,EAAEC,kCACJ,eAAe,IACd,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,KAAK,EAAE,EACxC;uBACjB,CAAC,EAAA;;kBAXI,QAAQ,GAAG,SAWf;kBAEF,sBAAO,QAAQ;2BACZ,IAAI,EAAE;2BACN,IAAI,CAAC,UAAC,IAAI;0BACT,yCAAY,IAAI,KAAE,GAAG,EAAE,OAAO,IAAG;uBAClC,CAAC;2BACD,IAAI,CAAC,OAAO,CAAC,EAAC;;;kBAEjB,MAAM,KAAG,CAAC;;;;OAEb,CAAC;EAEF;AACA,MAAa,eAAe,GAAG,UAM7B,OAAsB,EACtB,OAAoC;;;;;;kBAGjB,qBAAM,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE;0BACxC,MAAM,EAAE,MAAM;0BACd,KAAK,EAAE,UAAU;0BACjB,IAAI,EAAE,MAAM;0BACZ,QAAQ,EAAE,QAAQ;0BAClB,QAAQ,EAAE,aAAa;0BACvB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC;0BACrC,OAAO,EAAEA,kCACJ,eAAe,IACd,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,KAAK,EAAE,EACxC;uBACjB,CAAC,EAAA;;kBAXI,QAAQ,GAAG,SAWf;kBAEF,uBACE,QAAQ;2BACL,IAAI,EAAE;2BACN,IAAI,CAAC,UAAC,YAAY;0BACjB,OAAO,EAAE,YAAY,cAAA,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;uBACvC,CAAC;;;;;;;;;;;2BAWD,IAAI,EAAE,GACT;;;kBAEF,MAAM,KAAG,CAAC;;;;OAEb;;EC/ND;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA4BA,WAAgB,eAAe,CAC7B,QAAa;MAEb,IACE,QAAQ,CAAC,OAAO,KAAK,KAAK;WACzB,QAAQ,CAAC,EAAE,KAAK,GAAG,IAAI,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;WACzC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,EACnC;UACA,OAAO,IAAI,CAAC;OACb;MAED,OAAO,KAAK,CAAC;EACf,CAAC;AAQD,WAAgB,iBAAiB;MAAC,aAAa;WAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;UAAb,wBAAa;;MAC7C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;UACpB,OAAO,UAAC,GAAQ,IAAK,OAAA,GAAG,GAAA,CAAC;OAC1B;MAED,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;UACpB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;OACf;MAED,OAAO,GAAG,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,UAAC,GAAQ,IAAK,OAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAA,GAAA,CAAC,CAAC;EACvD,CAAC;;ECzED;AACA,EAmBA,IAAW,cAGV;EAHD,WAAW,cAAc;MACvB,iDAAG,CAAA;MACH,iDAAG,CAAA;EACL,CAAC,EAHU,cAAc,KAAd,cAAc,QAGxB;EAED;MAkBE,sBACE,OAAe,EACf,aAA0D,EAC1D,aAA0D;UAH5D,iBAQC;UANC,8BAAA,EAAA,oBAAqD,GAAG,EAAE;UAC1D,8BAAA,EAAA,oBAAqD,GAAG,EAAE;UApB5D,eAAU,GAAG;cACX,OAAO,EAAE;kBACP,GAAG,EAAE,UAAO,EAAyB,EAAE,KAAoB;sBAApB,sBAAA,EAAA,WAAoB;sBACzD,KAAI,CAAC,cAAc,CAAqB,EAAE,eAAsB,KAAK,CAAC,CAAC;mBACxE;eACF;cACD,QAAQ,EAAE;kBACR,GAAG,EAAE,UAAU,EAA4B,EAAE,KAAoB;sBAApB,sBAAA,EAAA,WAAoB;sBAC/D,KAAI,CAAC,cAAc,CAAqB,EAAE,eAAsB,KAAK,CAAC,CAAC;mBACxE;eACF;WACF,CAAC;UAWA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;UACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;UACnC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;OACpC;;;;;;;;;;;MAYS,qCAAc,GAAxB,UACE,EAAoE,EACpE,IAAO,EACP,KAAc;UAEd,IAAI,IAAI,oBAA2B,IAAI,kBAAyB;cAC9D,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;WACtE;UACD,IAAI,IAAI,kBAAyB;cAC/B,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;cACpD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,2DAAM,OAAO,YAAmB,EAAE,UAAE,CAAC;WAClE;eAAM;cACL,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;cACpD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,2DAAM,OAAO,YAAmB,EAAE,UAAE,CAAC;WAClE;OACF;;;;;;;;;;;MAYS,oCAAa,GAAvB,UACE,MAAiB;;UAEjB,IAAM,MAAM,GAAsB,EAAE,CAAC;UACrC,IAAM,MAAM,GAAsB,EAAE,CAAC;;cAErC,KAAkC,IAAA,KAAAC,eAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAA,gBAAA,4BAAE;kBAArD,IAAA,KAAAC,yBAAmB,EAAlB,GAAG,QAAA,EAAE,YAAY,QAAA;kBAC3B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,MAAM,EAAE;sBAC5D,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;kBAED,IAAI,GAAG,YAAY,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;sBAC7C,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;kBAED,IAAI,GAAG,KAAK,GAAG,EAAE;sBACf,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;eACF;;;;;;;;;;cAED,KAAkC,IAAA,KAAAD,eAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAA,gBAAA,4BAAE;kBAArD,IAAA,KAAAC,yBAAmB,EAAlB,GAAG,QAAA,EAAE,YAAY,QAAA;kBAC3B,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,MAAM,EAAE;sBAC5D,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;kBAED,IAAI,GAAG,YAAY,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;sBAC7C,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;kBAED,IAAI,GAAG,KAAK,GAAG,EAAE;sBACf,MAAM,CAAC,IAAI,OAAX,MAAM,uCAAS,YAAY,WAAE;mBAC9B;eACF;;;;;;;;;UAED,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;OACzB;MACH,mBAAC;EAAD,CAAC,IAAA;;EC9HD;AACA;MA4BkCC,sCAAY;MAA9C;;OA0EC;MAzEC,mCAAY,GAAZ,UAA8B,MAAiB,EAAE,MAAS;UACxD,OAAO;cACL,GAAG,EAAE,IAAI,CAAC,OAAO;cACjB,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,QAAA,EAAE,MAAM,QAAA,EAAE;WACnD,CAAC;OACH;MAED,wCAAiB,GAAjB,UACE,MAAiB,EACjB,UAAe;UAEf,IAAM,QAAQ,GAA2B,EAAE,CAAC;UAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;;;cAI1C,IAAM,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;cACpC,IAAI,MAAM,SAAK,CAAC;cAChB,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;;kBAEhC,MAAM,GAAG,aAAa,CAAC;eACxB;mBAAM;kBACL,MAAM,GAAG,CAAC,aAAa,CAAC,CAAC;eAC1B;;cAED,QAAQ,CAAC,IAAI,CAAC;kBACZ,EAAE,EAAE,CAAC,GAAG,CAAC;kBACT,OAAO,EAAE,KAAK;kBACd,MAAM,QAAA;kBACN,MAAM,QAAA;eACP,CAAC,CAAC;WACJ;UACD,OAAO;cACL,GAAG,EAAE,IAAI,CAAC,OAAO;cACjB,OAAO,EAAE,QAAQ;WAClB,CAAC;OACH;MAED,2BAAI,GAAJ,UACE,MAAiB;UACjB,gBAAY;eAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;cAAZ,+BAAY;;UAEN,IAAA,KAAAD,aAAe,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAA,EAAxC,IAAI,QAAA,EAAE,IAAI,QAA8B,CAAC;UAEhD,IAAM,aAAa,GAAG,iBAAiB,oDAAI,IAAI,UAAC,CAAC;UACjD,IAAM,aAAa,GAAG,iBAAiB,oDAAI,IAAI,UAAC,CAAC;UAEjD,IAAM,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;UAE7D,OAAO,UAAU,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;OACvC;MAED,gCAAS,GAAT,UACE,MAAiB,EACjB,MAAW;UAEL,IAAA,KAAAA,aAAe,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAA,EAAxC,IAAI,QAAA,EAAE,IAAI,QAA8B,CAAC;UAChD,IAAM,aAAa,GAAG,iBAAiB,oDAAI,IAAI,UAAC,CAAC;UACjD,IAAM,aAAa,GAAG,iBAAiB,oDAAI,IAAI,UAAC,CAAC;UAEjD,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;UAE5D,IAAM,GAAG,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;UACxC,OAAO,eAAe,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;OAC5C;MAED,gCAAS,GAAT,UAAU,KAAa,EAAE,UAAsB;UAC7C,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;OACjE;MAED,kCAAW,GAAX,UAAY,KAAa;UACvB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;OACjE;MACH,mBAAC;EAAD,CA1EA,CAAkC,YAAY;;EC7B9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;AACA,MAAa,eAAe,GAAG,EAAE;;ECtBjC;AACA;MA2BE;UAAA,iBASC;UAXO,aAAQ,GAAS,EAAE,CAAC;UAG1B,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;UACvC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UACzC,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;cACzC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;cACvB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;WACtB,CAAC,CAAC;UACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OAClD;MAED,oCAAa,GAAb;UACE,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;cAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;WACzB;OACF;MACD,yBAAE,GAAF,UAAG,IAAY,EAAE,OAAqB;UACpC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;UAC/B,OAAO,IAAI,CAAC;OACb;MACD,2BAAI,GAAJ,UAAK,IAAY,EAAE,OAAqB;UAAxC,iBAKC;UAJC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,UAAC,CAAM;cAC3B,OAAO,CAAC,CAAC,CAAC,CAAC;cACX,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;WAChC,CAAC,CAAC;OACJ;MAED,uCAAgB,GAAhB,UAAiB,IAAY,EAAE,OAAqB;UAClD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;OAChC;MAED,0CAAmB,GAAnB,UAAoB,IAAa,EAAE,OAAsB;UACvD,IAAI,CAAC,IAAI,EAAE;cACT,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;cACnB,OAAO;WACR;UACD,IAAI,CAAC,OAAO,EAAE;cACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;WAC5B;eAAM;cACL,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;WACxC;OACF;MACD,8BAAO,GAAP,UAAQ,KAAU;UAChB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;UAChC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;OAC/B;MACD,6BAAM,GAAN,UAAO,IAAS;UACd,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;UAC9B,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;OAC/B;MACD,oCAAa,GAAb,UAAc,SAAc;UAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;UACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;cACrC,IAAI,SAAS,KAAK,GAAG,EAAE;kBACrB,KAAK,IAAI,CAAC,CAAC;eACZ;WACF,CAAC,CAAC;UACH,OAAO,KAAK,CAAC;OACd;MACH,mBAAC;EAAD,CAAC;;ECvFD,8BAA8B;;;;;;;;;;;;;;;;;;;;"}